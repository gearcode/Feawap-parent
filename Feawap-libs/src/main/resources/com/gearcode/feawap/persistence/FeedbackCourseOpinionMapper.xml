<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gearcode.feawap.persistence.FeedbackCourseOpinionMapper" >
  <resultMap id="BaseResultMap" type="com.gearcode.feawap.domain.FeedbackCourseOpinion" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="INTEGER" />
    <result column="explicit" property="explicit" jdbcType="INTEGER" />
    <result column="interesting" property="interesting" jdbcType="VARCHAR" />
    <result column="lecturer_plan_evaluation" property="lecturerPlanEvaluation" jdbcType="VARCHAR" />
    <result column="communication" property="communication" jdbcType="INTEGER" />
    <result column="prepare" property="prepare" jdbcType="INTEGER" />
    <result column="attitude" property="attitude" jdbcType="INTEGER" />
    <result column="lecturer_evaluation" property="lecturerEvaluation" jdbcType="VARCHAR" />
    <result column="course_plan_evaluation" property="coursePlanEvaluation" jdbcType="VARCHAR" />
    <result column="attend" property="attend" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, content, explicit, interesting, lecturer_plan_evaluation, communication, 
    prepare, attitude, lecturer_evaluation, course_plan_evaluation, attend, created
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gearcode.feawap.domain.FeedbackCourseOpinionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from feedback_course_opinion
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from feedback_course_opinion
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from feedback_course_opinion
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gearcode.feawap.domain.FeedbackCourseOpinionExample" >
    delete from feedback_course_opinion
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gearcode.feawap.domain.FeedbackCourseOpinion" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into feedback_course_opinion (user_id, content, explicit, 
      interesting, lecturer_plan_evaluation, communication, 
      prepare, attitude, lecturer_evaluation, 
      course_plan_evaluation, attend, created
      )
    values (#{userId,jdbcType=INTEGER}, #{content,jdbcType=INTEGER}, #{explicit,jdbcType=INTEGER}, 
      #{interesting,jdbcType=VARCHAR}, #{lecturerPlanEvaluation,jdbcType=VARCHAR}, #{communication,jdbcType=INTEGER}, 
      #{prepare,jdbcType=INTEGER}, #{attitude,jdbcType=INTEGER}, #{lecturerEvaluation,jdbcType=VARCHAR}, 
      #{coursePlanEvaluation,jdbcType=VARCHAR}, #{attend,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gearcode.feawap.domain.FeedbackCourseOpinion" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into feedback_course_opinion
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="explicit != null" >
        explicit,
      </if>
      <if test="interesting != null" >
        interesting,
      </if>
      <if test="lecturerPlanEvaluation != null" >
        lecturer_plan_evaluation,
      </if>
      <if test="communication != null" >
        communication,
      </if>
      <if test="prepare != null" >
        prepare,
      </if>
      <if test="attitude != null" >
        attitude,
      </if>
      <if test="lecturerEvaluation != null" >
        lecturer_evaluation,
      </if>
      <if test="coursePlanEvaluation != null" >
        course_plan_evaluation,
      </if>
      <if test="attend != null" >
        attend,
      </if>
      <if test="created != null" >
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=INTEGER},
      </if>
      <if test="explicit != null" >
        #{explicit,jdbcType=INTEGER},
      </if>
      <if test="interesting != null" >
        #{interesting,jdbcType=VARCHAR},
      </if>
      <if test="lecturerPlanEvaluation != null" >
        #{lecturerPlanEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="communication != null" >
        #{communication,jdbcType=INTEGER},
      </if>
      <if test="prepare != null" >
        #{prepare,jdbcType=INTEGER},
      </if>
      <if test="attitude != null" >
        #{attitude,jdbcType=INTEGER},
      </if>
      <if test="lecturerEvaluation != null" >
        #{lecturerEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="coursePlanEvaluation != null" >
        #{coursePlanEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="attend != null" >
        #{attend,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gearcode.feawap.domain.FeedbackCourseOpinionExample" resultType="java.lang.Integer" >
    select count(*) from feedback_course_opinion
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update feedback_course_opinion
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=INTEGER},
      </if>
      <if test="record.explicit != null" >
        explicit = #{record.explicit,jdbcType=INTEGER},
      </if>
      <if test="record.interesting != null" >
        interesting = #{record.interesting,jdbcType=VARCHAR},
      </if>
      <if test="record.lecturerPlanEvaluation != null" >
        lecturer_plan_evaluation = #{record.lecturerPlanEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="record.communication != null" >
        communication = #{record.communication,jdbcType=INTEGER},
      </if>
      <if test="record.prepare != null" >
        prepare = #{record.prepare,jdbcType=INTEGER},
      </if>
      <if test="record.attitude != null" >
        attitude = #{record.attitude,jdbcType=INTEGER},
      </if>
      <if test="record.lecturerEvaluation != null" >
        lecturer_evaluation = #{record.lecturerEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="record.coursePlanEvaluation != null" >
        course_plan_evaluation = #{record.coursePlanEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="record.attend != null" >
        attend = #{record.attend,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update feedback_course_opinion
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=INTEGER},
      explicit = #{record.explicit,jdbcType=INTEGER},
      interesting = #{record.interesting,jdbcType=VARCHAR},
      lecturer_plan_evaluation = #{record.lecturerPlanEvaluation,jdbcType=VARCHAR},
      communication = #{record.communication,jdbcType=INTEGER},
      prepare = #{record.prepare,jdbcType=INTEGER},
      attitude = #{record.attitude,jdbcType=INTEGER},
      lecturer_evaluation = #{record.lecturerEvaluation,jdbcType=VARCHAR},
      course_plan_evaluation = #{record.coursePlanEvaluation,jdbcType=VARCHAR},
      attend = #{record.attend,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gearcode.feawap.domain.FeedbackCourseOpinion" >
    update feedback_course_opinion
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=INTEGER},
      </if>
      <if test="explicit != null" >
        explicit = #{explicit,jdbcType=INTEGER},
      </if>
      <if test="interesting != null" >
        interesting = #{interesting,jdbcType=VARCHAR},
      </if>
      <if test="lecturerPlanEvaluation != null" >
        lecturer_plan_evaluation = #{lecturerPlanEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="communication != null" >
        communication = #{communication,jdbcType=INTEGER},
      </if>
      <if test="prepare != null" >
        prepare = #{prepare,jdbcType=INTEGER},
      </if>
      <if test="attitude != null" >
        attitude = #{attitude,jdbcType=INTEGER},
      </if>
      <if test="lecturerEvaluation != null" >
        lecturer_evaluation = #{lecturerEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="coursePlanEvaluation != null" >
        course_plan_evaluation = #{coursePlanEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="attend != null" >
        attend = #{attend,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gearcode.feawap.domain.FeedbackCourseOpinion" >
    update feedback_course_opinion
    set user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=INTEGER},
      explicit = #{explicit,jdbcType=INTEGER},
      interesting = #{interesting,jdbcType=VARCHAR},
      lecturer_plan_evaluation = #{lecturerPlanEvaluation,jdbcType=VARCHAR},
      communication = #{communication,jdbcType=INTEGER},
      prepare = #{prepare,jdbcType=INTEGER},
      attitude = #{attitude,jdbcType=INTEGER},
      lecturer_evaluation = #{lecturerEvaluation,jdbcType=VARCHAR},
      course_plan_evaluation = #{coursePlanEvaluation,jdbcType=VARCHAR},
      attend = #{attend,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.gearcode.feawap.domain.FeedbackCourseOpinionExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from feedback_course_opinion
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>